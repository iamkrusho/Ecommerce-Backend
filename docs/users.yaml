components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: ID del usuario
        firstName:
          type: string
          description: Nombre del usuario
        lastName:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo del usuario
        age:
          type: number
          description: Edad del usuario
        role:
          type: string
          description: Rol del usuario
        isAdmin:
          type: boolean
          description: Booleano que revela si el usuario es administrador
        password:
          type: string
          description: Contraseña hasheada del usuario
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /api/users/:
    get:
      summary: Lista todos los usuarios
      security:
        - bearerAuth: []
      tags:
        - Users
      responses:
        "200":
          description: Se obtienen los usuarios correctamente
        "500":
          description: Error en el servidor
    post:
      summary: Crea un nuevo usuario
      security:
        - bearerAuth: []
      tags:
        - Users
      responses:
        "201":
          description: Usuario creado exitosamente
        "401":
          description: Sin autorización
        "403":
          description: Error de autenticación
        "500":
          description: Error en el servidor
  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por ID
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          type: string
          description: ID del usuario
      tags:
        - Users
      responses:
        "200":
          description: Se obtiene el usuario correctamente
        "404":
          description: No se pudo encontrar al usuario
        "500":
          description: Error en el servidor
    put:
      summary: Actualiza un usuario existente por ID
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          type: string
          description: ID del usuario
      tags:
        - Users
      responses:
        "200":
          description: Usuario actualizado exitosamente
        "500":
          description: Error en el servidor
    delete:
      summary: Elimina un usuario por ID
      security:
        - bearerAuth: []
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          type: string
          description: ID del usuario
      responses:
        "200":
          description: Usuario eliminado exitosamente
        "500":
          description: Error en el servidor
